#!/usr/bin/perl
use strict;

my $dir = shift || '.';
my $keep = 1;
my $bases = {};

sub process {
	my $dir = shift;

	opendir my($dh), $dir or die "Couldn't open dir '$dir': $!";

	for my $file (readdir $dh) {
		my $name = "$dir/$file";

		if( -d $name) {
			process($name) if $file ne '.' && $file ne '..';
			next;
		}

    	if($file =~ /(.*)-([^\-]+)-(\d+)-(\w+)\.pkg\.tar\.\w+$/) {
    	    $bases->{$1 . ':' . $4}->{versions}->{$2 . '-' . $3} = $name;
    	}
		if($file =~ /(.*)_([^\_]+)_(\w+).deb$/) {
        	$bases->{$1 . ':' . $3}->{versions}->{$2} = $name;
    	}
		if($file =~ /(.*)-([^\-]+)-(\d+)\.(\w+)\.rpm$/) {
        	$bases->{$1 . ':' . $4}->{versions}->{$2 . '-' . $3} = $name;
    	}
	}

	closedir $dh;
}

process($dir);

while(my($k,$v)= each %$bases) {
    my @versions = sort versioncmp keys %{$v->{versions}};

	for my $i (1...$keep) {
    	pop @versions;
	}

    for my $version (@versions) {
        my $name = $v->{versions}->{$version};
        print "$name\n";
    }
}

sub versioncmp ($$) {
    my @A = ($_[0] =~ /([-.]|\d+|[^-.\d]+)/g);
    my @B = ($_[1] =~ /([-.]|\d+|[^-.\d]+)/g);

    my ($A, $B);
    while (@A and @B) {
	$A = shift @A;
	$B = shift @B;
	if ($A eq '-' and $B eq '-') {
	    next;
	} elsif ( $A eq '-' ) {
	    return -1;
	} elsif ( $B eq '-') {
	    return 1;
	} elsif ($A eq '.' and $B eq '.') {
	    next;
	} elsif ( $A eq '.' ) {
	    return -1;
	} elsif ( $B eq '.' ) {
	    return 1;
	} elsif ($A =~ /^\d+$/ and $B =~ /^\d+$/) {
	    if ($A =~ /^0/ || $B =~ /^0/) {
		return $A cmp $B if $A cmp $B;
	    } else {
		return $A <=> $B if $A <=> $B;
	    }
	} else {
	    $A = uc $A;
	    $B = uc $B;
	    return $A cmp $B if $A cmp $B;
	}	
    }
    @A <=> @B;
}

